Ok, so this is my Binary Immediate Translation System, or BITS
BITS takes assembly output from other programs (such as Ddisasm)

Then it parses it for the instructions
Then it converts them from x86_64 to ARM64
Because it can be used to run AMD64 programs natively on ARM hardware,
eliminating the need for virtualization such as QEMU

Examples:
	ELF   AMD64 Linux/BSDs		     > ELF   ARM64 Linux/BSDs
	PE    AMD64 Windows NT		     > PE    ARM64 Windows NT	
	MACHO AMD64 XNU			     > MACHO ARM64 XNU

Yes, there are already about 2 tools that can do this.
But, their binaries suffer terrible performance loss,
And, their binaries are terribly oversized.

SO, this tool will "Immediate"ly convert the AMD64 to ARM64 instructions after disassembly.
No middle step of going through any IR
It will also store a list of registers used for the same purpose between architectures.
MINIMAL (hopefully nothing) impact on size or performance!

Oh and yes, this was written as part of my Cobb Regional Tech Competition Project
This is actually the Prototype README

Currently in Python for funsies,
Will rewrite in Rust later for more performance!
